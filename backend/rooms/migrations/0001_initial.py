# Generated by Django 4.2.7 on 2025-08-11 04:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_public', models.BooleanField(default=True)),
                ('max_users', models.IntegerField(default=8)),
                ('room_color', models.CharField(default='#6366f1', max_length=7)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_rooms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_avatar_color', models.CharField(default='#f59e0b', max_length=7)),
                ('preferred_username', models.CharField(blank=True, max_length=50)),
                ('default_volume', models.FloatField(default=0.8)),
                ('sound_effects_enabled', models.BooleanField(default=True)),
                ('beat_visualization_enabled', models.BooleanField(default=True)),
                ('show_listening_activity', models.BooleanField(default=True)),
                ('allow_wave_messages', models.BooleanField(default=True)),
                ('auto_join_public_rooms', models.BooleanField(default=False)),
                ('notify_on_room_invite', models.BooleanField(default=True)),
                ('notify_on_song_add', models.BooleanField(default=True)),
                ('notify_on_wave_received', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='echo_preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SoundWave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intensity', models.FloatField(default=1.0)),
                ('color', models.CharField(default='#3b82f6', max_length=7)),
                ('wave_type', models.CharField(choices=[('pulse', 'Pulse'), ('ring', 'Ring'), ('beam', 'Beam'), ('spiral', 'Spiral')], default='pulse', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('message', models.CharField(blank=True, max_length=100)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_waves', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sound_waves', to='rooms.room')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_waves', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('artist', models.CharField(max_length=200)),
                ('album', models.CharField(blank=True, max_length=200)),
                ('duration', models.IntegerField()),
                ('spotify_id', models.CharField(blank=True, max_length=100)),
                ('youtube_id', models.CharField(blank=True, max_length=100)),
                ('apple_music_id', models.CharField(blank=True, max_length=100)),
                ('file_url', models.URLField(blank=True)),
                ('preview_url', models.URLField(blank=True)),
                ('genre', models.CharField(default='Unknown', max_length=50)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('bpm', models.IntegerField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('valence', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('play_count', models.IntegerField(default=0)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('current_position', models.IntegerField(default=0)),
                ('is_playing', models.BooleanField(default=False)),
                ('is_shuffled', models.BooleanField(default=False)),
                ('repeat_mode', models.CharField(choices=[('off', 'Off'), ('one', 'Repeat One'), ('all', 'Repeat All')], default='off', max_length=10)),
                ('volume', models.FloatField(default=0.8)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('last_played_at', models.DateTimeField(blank=True, null=True)),
                ('auto_skip_enabled', models.BooleanField(default=True)),
                ('auto_add_similar', models.BooleanField(default=False)),
                ('current_song', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rooms.song')),
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='playlist', to='rooms.room')),
            ],
            options={
                'ordering': ['-last_updated'],
            },
        ),
        migrations.CreateModel(
            name='RoomMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('position_x', models.FloatField(default=0.0)),
                ('position_y', models.FloatField(default=0.0)),
                ('position_z', models.FloatField(default=0.0)),
                ('avatar_color', models.CharField(default='#f59e0b', max_length=7)),
                ('username_override', models.CharField(blank=True, max_length=50)),
                ('is_moderator', models.BooleanField(default=False)),
                ('can_control_music', models.BooleanField(default=True)),
                ('can_send_waves', models.BooleanField(default=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='rooms.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['joined_at'],
                'unique_together': {('room', 'user')},
            },
        ),
        migrations.CreateModel(
            name='RoomActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('user_joined', 'User Joined'), ('user_left', 'User Left'), ('song_added', 'Song Added'), ('song_played', 'Song Played'), ('song_skipped', 'Song Skipped'), ('wave_sent', 'Wave Sent'), ('position_changed', 'Position Changed')], max_length=30)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='rooms.room')),
                ('song', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rooms.song')),
                ('target_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='targeted_activities', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['room', 'timestamp'], name='rooms_rooma_room_id_17e28c_idx'), models.Index(fields=['activity_type', 'timestamp'], name='rooms_rooma_activit_70b5d2_idx')],
            },
        ),
        migrations.CreateModel(
            name='PlaylistSong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('upvotes', models.IntegerField(default=0)),
                ('downvotes', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='rooms.playlist')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rooms.song')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('playlist', 'order')},
            },
        ),
    ]
